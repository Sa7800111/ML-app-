version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    ports: ["5432:5432"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./create_tables.sql:/var/lib/postgresql/data/create_tables.sql
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 30

  airflow:
    image: apache/airflow:2.10.1
    container_name: airflow
    restart: unless-stopped
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${AIRFLOW_DB}
      APP_DB_URL: ${APP_DB_URL}
      DATABASE_URL: ${DATABASE_URL}
      FASTAPI_PREDICT_URL: ${FASTAPI_PREDICT_URL}
      TEAMS_WEBHOOK_URL: ${TEAMS_WEBHOOK_URL}
      PYTHONPATH: /opt/airflow/dags
    command: >
      bash -c "pip install --no-cache-dir pandas requests sqlalchemy psycopg2-binary
               apache-airflow-providers-postgres==5.12.0
               great-expectations==0.18.21 &&
               airflow db migrate &&
               airflow users create --username admin --password admin --firstname A --lastname B --role Admin --email admin@local &&
               airflow scheduler & airflow webserver"
    ports: ["8080:8080"]
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ../data:/opt/airflow/data
      - ../gx:/opt/airflow/ge
      - ./grafana/provisioning:/etc/grafana/provisioning

  grafana:
    image: grafana/grafana:10.4.6
    container_name: grafana
    restart: unless-stopped
    ports: ["3000:3000"]
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning

volumes:
  pgdata:
